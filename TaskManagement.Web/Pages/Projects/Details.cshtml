@page "{id:int}"
@model TaskManagement.Web.Pages.Projects.DetailsModel
@{
    ViewData["Title"] = "Project Details";
}

<div class="container" data-project-id="@Model.Project.Id">
    <h2>@Model.Project.Name</h2>
    <p class="text-muted">@Model.Project.Description</p>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    
    <!-- Add this section to the Details.cshtml -->
    @if (Model.IsAdmin || Model.IsManager)
    {
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Create New Task</h5>
            </div>
            <div class="card-body">
                <form method="post" asp-page-handler="CreateTask">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="form-group">
                                <label asp-for="TaskInput.Title" class="control-label"></label>
                                <input asp-for="TaskInput.Title" class="form-control" />
                                <span asp-validation-for="TaskInput.Title" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="TaskInput.Priority" class="control-label"></label>
                                <select asp-for="TaskInput.Priority" asp-items="Html.GetEnumSelectList<TaskManagement.Core.Enums.TaskPriority>()" class="form-control"></select>
                                <span asp-validation-for="TaskInput.Priority" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="TaskInput.Description" class="control-label"></label>
                        <textarea asp-for="TaskInput.Description" class="form-control"></textarea>
                        <span asp-validation-for="TaskInput.Description" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="TaskInput.AssignedToId" class="control-label"></label>
                                <select asp-for="TaskInput.AssignedToId" asp-items="Model.AvailableUsers" class="form-control">
                                    <option value="">Assign To...</option>
                                </select>
                                <span asp-validation-for="TaskInput.AssignedToId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="TaskInput.DueDate" class="control-label"></label>
                                <input asp-for="TaskInput.DueDate" type="date" class="form-control" />
                                <span asp-validation-for="TaskInput.DueDate" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Create Task</button>
                </form>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Tasks</h5>
                    @if (Model.IsAdmin || Model.IsManager)
                    {
                        <a asp-page="/Tasks/Create" asp-route-projectId="@Model.Project.Id" class="btn btn-primary btn-sm">Add Task</a>
                    }
                </div>
                <div class="card-body">
                    @if (Model.Tasks.Any())
                    {
                        <div class="list-group">
                            @foreach (var task in Model.Tasks)
                            {
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">@task.Title</h6>
                                            <p class="mb-1 text-muted">@task.Description</p>
                                            <small>
                                                Status: <span class="badge bg-@GetStatusBadgeClass(task.Status)">@task.Status</span>
                                                Priority: <span class="badge bg-@GetPriorityBadgeClass(task.Priority)">@task.Priority</span>
                                                Assigned to: @task.AssignedTo?.FirstName @task.AssignedTo?.LastName
                                            </small>
                                        </div>
                                        <a asp-page="/Tasks/Edit" asp-route-id="@task.Id" class="btn btn-secondary btn-sm">Edit</a>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No tasks yet.</p>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Team Members</h5>
                </div>
                <div class="card-body">
                    @if (Model.Assignments.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var assignment in Model.Assignments)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        @assignment.User.FirstName @assignment.User.LastName
                                        <br>
                                        <small class="text-muted">Assigned by: @assignment.AssignedBy.FirstName</small>
                                    </div>
                                    @if (Model.IsAdmin || Model.IsManager)
                                    {
                                        <form method="post" asp-page-handler="RemoveAssignment">
                                            <input type="hidden" name="assignmentId" value="@assignment.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm">Remove</button>
                                        </form>
                                    }
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No team members yet.</p>
                    }

                    @if (Model.IsAdmin || Model.IsManager)
                    {
                        <hr>
                        <form method="post" asp-page-handler="AddAssignment" class="mt-3">
                            <input type="hidden" name="projectId" value="@Model.Project.Id" />
                            <div class="form-group">
                                <label for="userId">Add Team Member</label>
                                <select name="userId" class="form-select" required>
                                    <option value="">Select user...</option>
                                    @foreach (var user in ViewData["AvailableUsers"] as SelectList)
                                    {
                                        <option value="@user.Value">@user.Text</option>
                                    }
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary btn-sm mt-2">Add to Project</button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Join the project group for real-time updates
        document.addEventListener('DOMContentLoaded', function() {
            const projectId = @Model.Project.Id;
            if (window.signalRConnection) {
                window.signalRConnection.invoke("JoinProjectGroup", projectId)
                    .catch(err => console.error('Error joining project group:', err));
            }
        });
    </script>
}

@functions {
    private string GetStatusBadgeClass(TaskManagement.Core.Enums.TaskStatus status)
    {
        return status switch
        {
            TaskManagement.Core.Enums.TaskStatus.Completed => "success",
            TaskManagement.Core.Enums.TaskStatus.InProgress => "primary",
            TaskManagement.Core.Enums.TaskStatus.Blocked => "danger",
            _ => "secondary"
        };
    }

    private string GetPriorityBadgeClass(TaskManagement.Core.Enums.TaskPriority priority)
    {
        return priority switch
        {
            TaskManagement.Core.Enums.TaskPriority.High => "warning",
            TaskManagement.Core.Enums.TaskPriority.Critical => "danger",
            _ => "info"
        };
    }
}